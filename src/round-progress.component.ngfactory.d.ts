/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
import * as import0 from './round-progress.component';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import14 from '@angular/core/src/linker/query_list';
export declare class Wrapper_RoundProgressComponent {
    _eventHandler: Function;
    context: import0.RoundProgressComponent;
    _changed: boolean;
    _changes: {
        [key: string]: any;
    };
    _expr_0: any;
    _expr_1: any;
    _expr_2: any;
    _expr_3: any;
    _expr_4: any;
    _expr_5: any;
    _expr_6: any;
    _expr_7: any;
    _expr_8: any;
    _expr_9: any;
    _expr_10: any;
    _expr_11: any;
    _expr_12: any;
    _expr_13: any;
    _expr_14: any;
    _expr_15: any;
    _expr_16: any;
    _expr_17: any;
    _expr_18: any;
    subscription0: any;
    constructor(p0: any, p1: any, p2: any, p3: any, p4: any);
    ngOnDetach(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any): void;
    ngOnDestroy(): void;
    check_current(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_max(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_radius(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_animation(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_animationDelay(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_duration(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_stroke(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_color(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_background(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_responsive(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_clockwise(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_semicircle(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    check_rounded(currValue: any, throwOnChange: boolean, forceUpdate: boolean): void;
    ngDoCheck(view: import2.AppView<any>, el: any, throwOnChange: boolean): boolean;
    checkHost(view: import2.AppView<any>, componentView: import2.AppView<any>, el: any, throwOnChange: boolean): void;
    handleEvent(eventName: string, $event: any): boolean;
    subscribe(view: import2.AppView<any>, _eventHandler: any, emit0: boolean): void;
}
export declare const RoundProgressComponentNgFactory: import9.ComponentFactory<import0.RoundProgressComponent>;
export declare class View_RoundProgressComponent0 extends import2.AppView<import0.RoundProgressComponent> {
    _viewQuery_path_0: import14.QueryList<any>;
    _text_0: any;
    _el_1: any;
    _text_2: any;
    _el_3: any;
    _text_4: any;
    _el_5: any;
    _text_6: any;
    _text_7: any;
    _expr_9: any;
    _expr_10: any;
    _expr_11: any;
    _expr_12: any;
    _expr_13: any;
    _expr_14: any;
    _expr_15: any;
    _expr_16: any;
    _expr_17: any;
    _expr_18: any;
    constructor(viewUtils: import3.ViewUtils, parentView: import2.AppView<any>, parentIndex: number, parentElement: any);
    createInternal(rootSelector: string): import9.ComponentRef<any>;
    detectChangesInternal(throwOnChange: boolean): void;
}

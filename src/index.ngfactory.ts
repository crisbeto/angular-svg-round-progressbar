/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './index';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from './round-progress.service';
import * as import5 from './round-progress.ease';
import * as import6 from './round-progress.config';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from '@angular/core/src/i18n/tokens';
class RoundProgressModuleInjector extends import0.NgModuleInjector<import1.RoundProgressModule> {
  _CommonModule_0:import2.CommonModule;
  _RoundProgressModule_1:import1.RoundProgressModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  __RoundProgressService_3:import4.RoundProgressService;
  __RoundProgressEase_4:import5.RoundProgressEase;
  __RoundProgressConfig_5:import6.RoundProgressConfig;
  constructor(parent:import7.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import8.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  get _RoundProgressService_3():import4.RoundProgressService {
    if ((this.__RoundProgressService_3 == null)) { (this.__RoundProgressService_3 = new import4.RoundProgressService()); }
    return this.__RoundProgressService_3;
  }
  get _RoundProgressEase_4():import5.RoundProgressEase {
    if ((this.__RoundProgressEase_4 == null)) { (this.__RoundProgressEase_4 = new import5.RoundProgressEase()); }
    return this.__RoundProgressEase_4;
  }
  get _RoundProgressConfig_5():import6.RoundProgressConfig {
    if ((this.__RoundProgressConfig_5 == null)) { (this.__RoundProgressConfig_5 = new import6.RoundProgressConfig()); }
    return this.__RoundProgressConfig_5;
  }
  createInternal():import1.RoundProgressModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._RoundProgressModule_1 = new import1.RoundProgressModule();
    return this._RoundProgressModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.RoundProgressModule)) { return this._RoundProgressModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    if ((token === import4.RoundProgressService)) { return this._RoundProgressService_3; }
    if ((token === import5.RoundProgressEase)) { return this._RoundProgressEase_4; }
    if ((token === import6.RoundProgressConfig)) { return this._RoundProgressConfig_5; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const RoundProgressModuleNgFactory:import0.NgModuleFactory<import1.RoundProgressModule> = new import0.NgModuleFactory(RoundProgressModuleInjector,import1.RoundProgressModule);